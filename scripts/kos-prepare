#!/bin/bash

# Exit immediately if a command exits with a non-zero status
set -e

# Function to display usage information
usage() {
    echo "Usage: $0 <package-directory>"
    exit 1
}

# Check if exactly one argument is provided
if [ "$#" -ne 1 ]; then
    usage
fi

# Assign the first argument to PACKAGE_DIR
PACKAGE_DIR="$1"

# Check if the specified directory exists
if [ ! -d "$PACKAGE_DIR" ]; then
    echo "Error: Directory '$PACKAGE_DIR' does not exist."
    exit 1
fi

# Define the DEBIAN directory path
DEBIAN_DIR="$PACKAGE_DIR/DEBIAN"

# Create the DEBIAN directory if it doesn't exist
mkdir -p "$DEBIAN_DIR"

# Define the control file path
CONTROL_FILE="$DEBIAN_DIR/control"

# Create a minimal control file if it doesn't exist
if [ ! -f "$CONTROL_FILE" ]; then
    echo "Creating minimal control file at '$CONTROL_FILE'."
    cat <<EOF > "$CONTROL_FILE"
Package: mypackage
Version: 1.0
Section: base
Priority: optional
Architecture: all
Maintainer: Your Name <you@example.com>
Description: A simple Debian package.
EOF
fi

# Set ownership and permissions
echo "Setting ownership and permissions..."
find "$PACKAGE_DIR" -type d -exec chmod 755 {} \;
find "$PACKAGE_DIR" -type f -exec chmod 644 {} \;

# Set executable permissions for scripts in usr/bin or usr/local/bin
for dir in "$PACKAGE_DIR/usr/bin" "$PACKAGE_DIR/usr/local/bin"; do
    if [ -d "$dir" ]; then
        find "$dir" -type f -exec chmod 755 {} \;
    fi
done

echo "Package directory '$PACKAGE_DIR' is prepared for dpkg-deb --build."
