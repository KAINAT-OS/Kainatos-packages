#!/usr/bin/env bash
# disk-formatter.sh
# Usage: disk-formatter.sh <path-to-desktop-file>

set -euo pipefail

# Check for required argument
test -n "${1-}" || { echo "Usage: $0 <.desktop file>" >&2; exit 1; }
DESKTOP_FILE="$1"

# Verify file exists
if [[ ! -f "$DESKTOP_FILE" ]]; then
    echo "Error: File '$DESKTOP_FILE' not found." >&2
    exit 1
fi

# Extract URL line (file:///...)
URL_LINE=$(grep -E '^URL=file:///' "$DESKTOP_FILE" || true)
if [[ -z "$URL_LINE" ]]; then
    echo "Error: No 'URL=file:///' entry found in '$DESKTOP_FILE'." >&2
    exit 1
fi

# Strip prefix to get mount point
MOUNT_POINT=${URL_LINE#URL=file://}

# Ensure mount point exists
test -d "$MOUNT_POINT" || { echo "Mount point '$MOUNT_POINT' does not exist." >&2; exit 1; }

# Find the device corresponding to the mount point
DEVICE=$(findmnt -n -o SOURCE --target "$MOUNT_POINT" || true)
if [[ -z "$DEVICE" ]]; then
    echo "Error: Could not determine device for mount point '$MOUNT_POINT'." >&2
    exit 1
fi

# Confirm device with user
if ! kdialog --yesno "Format device $DEVICE mounted at $MOUNT_POINT?"; then
    echo "Operation cancelled by user." >&2
    exit 1
fi

# Ask for filesystem type
types=("ext4" "ntfs" "vfat" "btrfs" "xfs")
CHOICE=$(kdialog --combobox "Select filesystem type:" "${types[@]}")
if [[ -z "$CHOICE" ]]; then
    echo "No filesystem selected. Exiting." >&2
    exit 1
fi

# Map choice to mkfs command
case "$CHOICE" in
    ext4)
        MKCMD=(mkfs.ext4)
        ;;
    ntfs)
        MKCMD=(mkfs.ntfs -f)
        ;;
    vfat)
        MKCMD=(mkfs.vfat)
        ;;
    btrfs)
        MKCMD=(mkfs.btrfs)
        ;;
    xfs)
        MKCMD=(mkfs.xfs)
        ;;
    *)
        echo "Unsupported filesystem: $CHOICE" >&2
        exit 1
        ;;
esac

# Ask for label
LABEL=$(kdialog --inputbox "Enter new label for $DEVICE:" "")
if [[ -z "$LABEL" ]]; then
    echo "No label provided. Using default." >&2
else
    # Append label option if supported
    case "$CHOICE" in
        ext4)
            MKCMD+=( -L "$LABEL" )
            ;;
        ntfs)
            MKCMD+=( -L "$LABEL" )
            ;;
        vfat)
            MKCMD+=( -n "$LABEL" )
            ;;
        btrfs)
            MKCMD+=( -L "$LABEL" )
            ;;
        xfs)
            MKCMD+=( -L "$LABEL" )
            ;;
    esac
fi

# Execute format
kdialog --sorry "About to run: ${MKCMD[*]} $DEVICE"
sudo "${MKCMD[@]}" "$DEVICE"

kdialog --msgbox "Successfully formatted $DEVICE as $CHOICE with label '${LABEL:-<none>}'"
