#!/usr/bin/env bash
# disk-formatter.sh
# Usage: disk-formatter.sh <path-to-desktop-file>

set -euo pipefail

# Check for required argument
test -n "${1-}" || { echo "Usage: $0 <.desktop file>" >&2; exit 1; }
DESKTOP_FILE="$1"

# Verify file exists
if [[ ! -f "$DESKTOP_FILE" ]]; then
    echo "Error: File '$DESKTOP_FILE' not found." >&2
    exit 1
fi

# Extract URL line (file:///...)
URL_LINE=$(grep -E '^URL=file:///' "$DESKTOP_FILE" || true)
if [[ -z "$URL_LINE" ]]; then
    echo "Error: No 'URL=file:///' entry found in '$DESKTOP_FILE'." >&2
    exit 1
fi

# Strip prefix to get mount point
MOUNT_POINT=${URL_LINE#URL=file://}

# Ensure mount point exists
test -d "$MOUNT_POINT" || { echo "Mount point '$MOUNT_POINT' does not exist." >&2; exit 1; }

# Find the device corresponding to the mount point
DEVICE=$(findmnt -n -o SOURCE --target "$MOUNT_POINT" || true)
if [[ -z "$DEVICE" ]]; then
    echo "Error: Could not determine device for mount point '$MOUNT_POINT'." >&2
    exit 1
fi


# Execute format
kdialog --sorry "About to unmount: ${MKCMD[*]} $DEVICE"
udisksctl  unmount  -b "$DEVICE"
/usr/bin/create_disk_links.sh
kdialog --msgbox "Successfully unmounted $DEVICE"
